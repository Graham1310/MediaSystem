/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment3;

import static assignment3.LogInUI2.connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author b0025885
 */

public class AddAssetToElement extends javax.swing.JFrame {
/**
 * This initialises the variables that will be required
 */    
private int elementID = 0;
private SetOfAssets setOfAssets = new SetOfAssets();
/**
 * @param tempElementID 
 * Receives ID for element to assign asset to
 * *Initialises the components
 *Fills assetList with set of assets 
 */
    AddAssetToElement(int tempElementID) {
        elementID = tempElementID;
        initComponents();                    
        FillAssets();
    }
      
      /**
       * Create declaration of variables required
       * Set up connection to database
       * Select all assets from database that are not assigned to an element
       * For each result, create an asset and assign it to a set of assets
       * Display assets in list
       */
      
    private void FillAssets() {

        try {          
                    int assetID;   
                    String assetName;       
                    String assetType;
                    SetOfTasks assetTasks = new SetOfTasks();
                    SetOfAssets unassignedAssets = new SetOfAssets();
                    ResultSet dbAssetResults = null;
                    Statement statement;
                    statement = connection.createStatement();
                    dbAssetResults = statement.executeQuery("SELECT Asset.ID,Asset.assetName, Asset.assetType, SetOFAssets.elementID" +
                                                " FROM Asset LEFT JOIN SetOFAssets ON Asset.ID = SetOFAssets.assetID" +
                                                " WHERE (((SetOFAssets.elementID) Is NULL ));");
                    while(dbAssetResults.next()){
                        assetID = dbAssetResults.getInt("ID");
                        assetName = dbAssetResults.getString("assetName");
                        assetType = dbAssetResults.getString("assetType");  
                        Asset newAsset = new Asset(assetID, assetName, assetType, assetTasks);
                        setOfAssets.add(newAsset);
                        assetList.setListData(setOfAssets);
                        AssetsListCellRenderer renderer = new AssetsListCellRenderer();  //custom cell renderer to display property rather than useless object.toString()
                        assetList.setCellRenderer(renderer);  
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(randomSQLFunctionsReady.class.getName()).log(Level.SEVERE, null, ex);
                }
        

        
    }
   
    /**
     *Initialises the components
     *Fills assetList with set of assets
     */
    public AddAssetToElement() {
        initComponents();                    
        FillAssets();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        assetList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        addAssetsToEle = new javax.swing.JButton();
        createAssetBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setViewportView(assetList);

        jLabel1.setText("Add Assets to Element");

        addAssetsToEle.setText("Add Assets To Element");
        addAssetsToEle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAssetsToEleActionPerformed(evt);
            }
        });

        createAssetBtn.setText("Create Asset");
        createAssetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAssetBtnActionPerformed(evt);
            }
        });

        refreshBtn.setText("Refresh Assets");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addAssetsToEle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(createAssetBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(refreshBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addAssetsToEle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(createAssetBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(refreshBtn)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param evt
     * On button click, try to create a connection
     * for each asset in assetList, insert the asset into SetOfAssets to assign
     * the asset to the elementID
     * Close when completed
     **/
    private void addAssetsToEleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAssetsToEleActionPerformed
        
       try {

            Statement statement;
            statement = connection.createStatement();
            for (int i=0; i< assetList.getSelectedValuesList().size(); i++){
                Asset asset = (Asset) assetList.getSelectedValuesList().get(i);
                statement.executeUpdate(" INSERT INTO SetOfAssets (assetID, elementID)"
                        + "VALUES (" + asset.getAssetID() + ", " + elementID + ");" );
            }
       } 
       catch (SQLException ex) {
       }
            this.dispose();
    }//GEN-LAST:event_addAssetsToEleActionPerformed

    /**
     * @param evt 
     * On button click
     * fill the list with the list of assets
     */
    
    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
       FillAssets();
    }//GEN-LAST:event_refreshBtnActionPerformed

    /**
     * @param evt 
     * On button click
     * Open the CreateAssetUI
     */
    private void createAssetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAssetBtnActionPerformed
        new CreateAssetUI().setVisible(true);
    }//GEN-LAST:event_createAssetBtnActionPerformed

    /**
     * @param args the command line arguments
     * When the AddAssetToElement UI opens
     * make the UI visible
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddAssetToElement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddAssetToElement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddAssetToElement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddAssetToElement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddAssetToElement().setVisible(true);
            }
        });
               
          
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAssetsToEle;
    private javax.swing.JList assetList;
    private javax.swing.JButton createAssetBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshBtn;
    // End of variables declaration//GEN-END:variables
}
