/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment3;

import static assignment3.LogInUI2.connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author b0025885
 */
public class AddAssetToElement extends javax.swing.JFrame {
  public SetOfAssets NewAssets =  new SetOfAssets();
  private SetOfAssets setOfAssets = new SetOfAssets();
      
      
      
    private void FillAssets() {
        try{
        ResultSet taskOnComponentsListResultSet = null;
       
        //assetList.repaint();
        Statement tasks;

        tasks = connection.createStatement();
        taskOnComponentsListResultSet = tasks.executeQuery("SELECT * FROM Asset;"); //TO DO: replace this with proper query

        int assetID;   
        String assetName;       
        String assetType;

        while(taskOnComponentsListResultSet.next())
        {
            assetID = taskOnComponentsListResultSet.getInt("ID");
            assetName = taskOnComponentsListResultSet.getString("assetName");
            assetType = taskOnComponentsListResultSet.getString("assetType");         


            //Task(int taskID, User responsiblePerson, String taskName, int priority, String status, Project project)
            Asset task= new Asset(assetID, assetName, assetType);
            setOfAssets.add(task);
            assetList.setListData(setOfAssets);
            TasksListCellRenderer renderer = new TasksListCellRenderer();  //custom cell renderer to display property rather than useless object.toString()
            assetList.setCellRenderer(renderer);

        }
    }catch(SQLException err)
            {
                System.out.println("ERROR: " + err);
                    JOptionPane.showMessageDialog(null,"* Cannot connect to database! *");
                    System.exit(1);
            }

        
        
    }
//public Project SelectedProject = null;
     

    public AddAssetToElement() {
        initComponents();
    }

   public AddAssetToElement(SetOfAssets NewAssets) {
       initComponents();
       FillAssets();
       NewAssets = NewAssets;
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        assetList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        addAssetsToEle = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setViewportView(assetList);

        jLabel1.setText("Add Assets to Element");

        addAssetsToEle.setText("Add Assets To Element");
        addAssetsToEle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAssetsToEleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addAssetsToEle)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addAssetsToEle))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addAssetsToEleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAssetsToEleActionPerformed
       //loops through the selected values and adds to the element
        NewAssets.add((Asset) assetList.getSelectedValue());
          this.dispose();
    }//GEN-LAST:event_addAssetsToEleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddAssetToElement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddAssetToElement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddAssetToElement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddAssetToElement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddAssetToElement().setVisible(true);
            }
        });
        
        
          //GET ASSETS FROM DATABASE AND PUT IN LIST
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAssetsToEle;
    private javax.swing.JList assetList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
